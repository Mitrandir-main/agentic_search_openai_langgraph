version: '3.8'

services:
  bulgarian-legal-ai:
    build: .
    container_name: bulgarian-legal-ai
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_CSE_API_KEY=${GOOGLE_CSE_API_KEY}
      - GOOGLE_CSE_ID=${GOOGLE_CSE_ID}
      - TAVILY_API_KEY=${TAVILY_API_KEY:-}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    env_file:
      - .env
    volumes:
      # Production volumes (only for logs and cache)
      - ./logs:/app/logs
      - ./cache:/app/cache
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - legal-ai-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Add Redis for caching (future enhancement)
  # redis:
  #   image: redis:7-alpine
  #   container_name: legal-ai-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   networks:
  #     - legal-ai-network
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"

  # Optional: Add Nginx reverse proxy (production)
  # nginx:
  #   image: nginx:alpine
  #   container_name: legal-ai-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - bulgarian-legal-ai
  #   restart: unless-stopped
  #   networks:
  #     - legal-ai-network

networks:
  legal-ai-network:
    driver: bridge

# volumes:
#   redis_data: 