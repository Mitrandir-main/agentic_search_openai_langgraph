#!/bin/bash

# Bulgarian Legal AI Assistant - Deployment Script
# This script builds and deploys the application using Docker

set -e  # Exit on any error

echo "üèõÔ∏è Bulgarian Legal AI Assistant - Deployment Script"
echo "=================================================="

# Check if .env file exists
if [[ ! -f .env ]]; then
    echo "‚ùå Error: .env file not found!"
    echo "üìù Please create a .env file based on .env.example"
    echo "   Required variables:"
    echo "   - OPENAI_API_KEY"
    echo "   - GOOGLE_CSE_ID"
    echo "   - GOOGLE_CSE_API_KEY"
    exit 1
fi

# Check if required environment variables are set
echo "üîç Checking environment variables..."
source .env

if [[ -z "$OPENAI_API_KEY" ]]; then
    echo "‚ùå Error: OPENAI_API_KEY not set in .env file"
    exit 1
fi

if [[ -z "$GOOGLE_CSE_ID" ]]; then
    echo "‚ùå Error: GOOGLE_CSE_ID not set in .env file"
    exit 1
fi

if [[ -z "$GOOGLE_CSE_API_KEY" ]]; then
    echo "‚ùå Error: GOOGLE_CSE_API_KEY not set in .env file"
    exit 1
fi

echo "‚úÖ Environment variables are configured"

# Build Docker image
echo "üê≥ Building Docker image..."
docker build -t bulgarian-legal-ai:latest .

if [[ $? -eq 0 ]]; then
    echo "‚úÖ Docker image built successfully"
else
    echo "‚ùå Failed to build Docker image"
    exit 1
fi

# Stop existing container if running
echo "üõë Stopping existing container (if any)..."
docker-compose down 2>/dev/null || true

# Start the application
echo "üöÄ Starting Bulgarian Legal AI Assistant..."
docker-compose up -d

if [[ $? -eq 0 ]]; then
    echo "‚úÖ Application started successfully!"
    echo ""
    echo "üåê Application URLs:"
    echo "   ‚Ä¢ Main Interface: http://localhost:8000"
    echo "   ‚Ä¢ API Documentation: http://localhost:8000/docs"
    echo "   ‚Ä¢ Health Check: http://localhost:8000/api/health"
    echo ""
    echo "üìä To view logs: docker-compose logs -f"
    echo "üõë To stop: docker-compose down"
else
    echo "‚ùå Failed to start application"
    echo "üìä Check logs: docker-compose logs"
    exit 1
fi

# Wait a moment and check if container is healthy
echo "‚è≥ Checking application health..."
sleep 10

if curl -s http://localhost:8000/api/health > /dev/null; then
    echo "‚úÖ Application is healthy and ready!"
else
    echo "‚ö†Ô∏è  Application may still be starting up..."
    echo "   Check status: docker-compose ps"
    echo "   View logs: docker-compose logs -f"
fi 